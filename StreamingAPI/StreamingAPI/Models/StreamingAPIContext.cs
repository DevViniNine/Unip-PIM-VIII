// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace StreamingAPI.Models;

public partial class StreamingAPIContext : DbContext
{
    public StreamingAPIContext(DbContextOptions<StreamingAPIContext> options)
        : base(options)
    {
    }

    public DbSet<Curtida> Curtidas { get; set; }
    public DbSet<Conteudo> Conteudos { get; set; }

    public DbSet<Criador> Criadores { get; set; }

    public virtual DbSet<ItemPlaylist> ItemPlaylist { get; set; }

    public virtual DbSet<Playlist> Playlists { get; set; }

    public DbSet<Comentario> Comentarios { get; set; }
    public DbSet<Usuario> Usuario { get; set; }

    public DbSet<Visualizacao> Visualizacoes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {

        modelBuilder.Entity<Usuario>(entity =>
        {
            // Altere para ValueGeneratedOnAdd()
            entity.Property(e => e.Id)
                  .ValueGeneratedOnAdd();  

            // Configurações adicionais se necessário
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Nome).IsRequired().HasMaxLength(100);
            entity.Property(e => e.Email).IsRequired().HasMaxLength(100);
            entity.Property(e => e.PasswordHash).IsRequired();
            entity.Property(e => e.PasswordSalt).IsRequired();
        });

        modelBuilder.Entity<Playlist>(entity =>
        {
            entity.HasKey(e => e.Id); 
        });

        modelBuilder.Entity<Curtida>().ToTable("Curtida");
        modelBuilder.Entity<Criador>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Criador__3213E83FE6A9A3AE");
        });

        modelBuilder.Entity<Comentario>().ToTable("comentario");

        modelBuilder.Entity<Visualizacao>().ToTable("visualizacao");


        modelBuilder.Entity<ItemPlaylist>()
     .HasKey(ip => new { ip.PlaylistID, ip.ConteudoID });

        modelBuilder.Entity<ItemPlaylist>()
            .HasOne(ip => ip.Playlist)
            .WithMany(p => p.ItensPlaylist)
            .HasForeignKey(ip => ip.PlaylistID)
            .OnDelete(DeleteBehavior.NoAction);

        modelBuilder.Entity<ItemPlaylist>()
            .HasOne(ip => ip.Conteudo)
            .WithMany(c => c.ItensPlaylist)
            .HasForeignKey(ip => ip.ConteudoID)
            .OnDelete(DeleteBehavior.NoAction);

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Usuario__3213E83F45767D9D");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

}